name: CI

permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint that thing
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uvx ruff vectorstore s3_vectors_at_home api

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv python install "3.11"
          uv sync --all-extras dev
      - name: Start MinIO
        run: |
          docker compose -f minio/docker-compose.yaml up -d
          sleep 4
      - name: Set MinIO env
        run: |
          echo "MINIO_ENDPOINT=localhost:9000" >> $GITHUB_ENV
          echo "MINIO_ACCESS_KEY=minioadmin" >> $GITHUB_ENV
          echo "MINIO_SECRET_KEY=minioadmin123" >> $GITHUB_ENV
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest --cov

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies and build
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv python install "3.11"
          uv sync --all-extras dev
          uvx run hatchling build

  publish:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Create env, install and build
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv python install "3.11"
          uv sync --all-extras dev
          uvx run hatchling build
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          uvx twine upload dist/*
